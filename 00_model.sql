-- Table pour les catégories de cuisine
CREATE TABLE categories (
  id bigint generated by default as identity primary key,
  name text not null,
  icon text not null,
  created_at timestamp with time zone default now()
);


create table recipes (
  id bigint generated by default as identity primary key,
  title text not null,
  country text not null,
  region text,
  description text not null,
  preparation_time integer not null,
  cooking_time integer not null,
  difficulty text not null,
  servings integer not null,
  is_premium boolean default false,
  image_url text,
  image_data text,
  story_intro text,
  story_intro_audio_url text,
  latitude numeric,
  longitude numeric,
  created_at timestamp with time zone default now(),
  category_id bigint REFERENCES categories(id),
  calories integer,
  total_time integer
);

create table ingredients (
  id bigint generated by default as identity primary key,
  recipe_id bigint references recipes(id) on delete cascade,
  name text not null,
  quantity text,
  unit text,
  created_at timestamp with time zone default now()
);

create table steps (
  id bigint generated by default as identity primary key,
  recipe_id bigint references recipes(id) on delete cascade,
  order_number integer not null,
  title text not null,
  description text not null,
  story_content text,
  story_audio_url text,
  story_background_image_url text,
  audio_url text,
  created_at timestamp with time zone default now()
);

create table wine_pairings (
  id bigint generated by default as identity primary key,
  recipe_id bigint references recipes(id) on delete cascade,
  name text not null,
  description text not null,
  region text not null,
  image_url text,
  purchase_link text,
  created_at timestamp with time zone default now()
);


create table playlists (
  id bigint generated by default as identity primary key,
  recipe_id bigint references recipes(id) on delete cascade,
  title text not null,
  description text not null,
  spotify_link text,
  image_url text,
  created_at timestamp with time zone default now()
);

create table playlist_tracks (
  id bigint generated by default as identity primary key,
  playlist_id bigint references playlists(id) on delete cascade,
  name text not null,
  artist text not null,
  order_number integer not null,
  created_at timestamp with time zone default now()
);

create table profiles (
  id uuid references auth.users on delete cascade primary key,
  username text unique,
  avatar_url text,
  is_premium boolean default false,
  premium_expiry_date timestamp with time zone,
  created_at timestamp with time zone default now()
);

create table completed_recipes (
  id bigint generated by default as identity primary key,
  user_id uuid references profiles(id) on delete cascade,
  recipe_id bigint references recipes(id) on delete cascade,
  rating integer,
  user_notes text,
  user_image_url text,
  completed_date timestamp with time zone default now(),
  unique(user_id, recipe_id)
);

create table badges (
  id bigint generated by default as identity primary key,
  name text not null,
  description text not null,
  image_url text not null,
  created_at timestamp with time zone default now()
);

create table user_badges (
  id bigint generated by default as identity primary key,
  user_id uuid references profiles(id) on delete cascade,
  badge_id bigint references badges(id) on delete cascade,
  earned_date timestamp with time zone default now(),
  unique(user_id, badge_id)
);

-- Table pour les inspirations culinaires
CREATE TABLE inspirations (
  id bigint generated by default as identity primary key,
  title text not null,
  image_url text not null,
  description text,
  created_at timestamp with time zone default now()
);

-- Table pour les ambiances sonores des expériences immersives
CREATE TABLE story_ambiances (
  id bigint generated by default as identity primary key,
  recipe_id bigint references recipes(id) on delete cascade,
  name text not null,
  description text not null,
  ambient_sound_url text,
  spotify_playlist_url text,
  created_at timestamp with time zone default now()
);

-- Table pour suivre les expériences de recettes des utilisateurs
CREATE TABLE recipe_experiences (
  id bigint generated by default as identity primary key,
  user_id uuid references profiles(id) on delete cascade,
  recipe_id bigint references recipes(id) on delete cascade,
  current_step integer default 1,
  is_story_mode boolean default false,
  start_time timestamp with time zone default now(),
  end_time timestamp with time zone,
  is_completed boolean default false,
  created_at timestamp with time zone default now(),
  unique(user_id, recipe_id, start_time)
);

-- Table pour les médias liés aux expériences
CREATE TABLE experience_media (
  id bigint generated by default as identity primary key,
  experience_id bigint references recipe_experiences(id) on delete cascade,
  step_number integer,
  media_type text not null,
  media_url text not null,
  caption text,
  created_at timestamp with time zone default now()
);

-- Création de la table des défis
CREATE TABLE IF NOT EXISTS challenges (
  id SERIAL PRIMARY KEY,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  imageUrl TEXT NOT NULL,
  endDate DATE NOT NULL,
  participants INTEGER DEFAULT 0,
  category TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);


-- Création de la table des ingrédients de saison
CREATE TABLE IF NOT EXISTS seasonal_ingredients (
  id SERIAL PRIMARY KEY,
  name TEXT NOT NULL,
  imageUrl TEXT NOT NULL,
  season TEXT NOT NULL,
  origin TEXT NOT NULL,
  benefits JSONB NOT NULL,
  relatedRecipes JSONB,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Création de la table des recettes favorites
CREATE TABLE IF NOT EXISTS favorite_recipes (
  id SERIAL PRIMARY KEY,
  user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,
  recipe_id BIGINT REFERENCES recipes(id) ON DELETE CASCADE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  UNIQUE(user_id, recipe_id)
);

-- Table pour les listes de courses des utilisateurs
CREATE TABLE IF NOT EXISTS shopping_lists (
  id SERIAL PRIMARY KEY,
  user_id UUID REFERENCES profiles(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  servings INTEGER NOT NULL,
  total_recipes INTEGER NOT NULL,
  recipe_ids TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table pour les catégories d'ingrédients dans les listes de courses
CREATE TABLE IF NOT EXISTS shopping_list_categories (
  id SERIAL PRIMARY KEY,
  shopping_list_id INTEGER REFERENCES shopping_lists(id) ON DELETE CASCADE,
  category TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table pour les ingrédients dans les listes de courses
CREATE TABLE IF NOT EXISTS shopping_list_items (
  id SERIAL PRIMARY KEY,
  shopping_list_id INTEGER REFERENCES shopping_lists(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  quantity TEXT NOT NULL,
  unit TEXT,
  category TEXT NOT NULL,
  is_checked BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- Table pour lier les recettes aux listes de courses
CREATE TABLE IF NOT EXISTS shopping_list_recipes (
  id SERIAL PRIMARY KEY,
  shopping_list_id INTEGER REFERENCES shopping_lists(id) ON DELETE CASCADE,
  recipe_id INTEGER REFERENCES recipes(id) ON DELETE CASCADE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
  UNIQUE(shopping_list_id, recipe_id)
);
